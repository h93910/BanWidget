package com.example.banwidgetimport android.app.Applicationimport android.content.ComponentNameimport android.content.Intentimport android.os.Buildimport android.util.Logimport com.example.banwidget.tool.CrashHandlerimport kotlinx.coroutines.*import java.util.concurrent.Executorimport java.util.concurrent.ExecutorServiceimport java.util.concurrent.Executorsimport java.util.concurrent.ThreadPoolExecutor/** * Created by Ban on 2018/1/23. */class MyApplication : Application() {    override fun onCreate() {        super.onCreate()        CrashHandler.getInstance().init(this)        GlobalScope.launch(Dispatchers.Default) {            //不能在application初期注册服务？            delay(10000)            init()        }    }    private fun init() {        val intent = Intent(this, TimerWidgetService::class.java)//        intent.component = ComponentName(this, TimerWidgetService::class.java)        if (Build.VERSION.SDK_INT >= 26) {            startForegroundService(intent);        } else {            // Pre-O behavior.            startService(intent);        }    }    companion object {        private const val TAG = "MyApplication"        @JvmField        var ThreadExecutor: ExecutorService = Executors.newSingleThreadExecutor()    }}